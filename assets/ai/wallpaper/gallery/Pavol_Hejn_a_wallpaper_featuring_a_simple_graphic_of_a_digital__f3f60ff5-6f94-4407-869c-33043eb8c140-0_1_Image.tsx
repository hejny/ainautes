/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_wallpaper_featuring_a_simple_graphic_of_a_digital__f3f60ff5-6f94-4407-869c-33043eb8c140-0_1.json';
import source from './Pavol_Hejn_a_wallpaper_featuring_a_simple_graphic_of_a_digital__f3f60ff5-6f94-4407-869c-33043eb8c140-0_1.png';

/**
 * Image of A wallpaper featuring a simple graphic of a digital clock or timer, with space for setting alarms and countdowns, set against a gradient background.
 *
 * @see https://www.midjourney.com/app/jobs/1
 * @generated by generate-wallpapers-library
 */
export function AWallpaperFeaturingASimpleGraphicOfADigitalF3f60ff56f944407869c33043eb8c1400_1_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A wallpaper featuring a simple graphic of a digital clock or timer, with space for setting alarms and countdowns, set against a gradient background."
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

AWallpaperFeaturingASimpleGraphicOfADigitalF3f60ff56f944407869c33043eb8c1400_1_Image.metadata =
    metadata satisfies IWallpaperMetadata;
AWallpaperFeaturingASimpleGraphicOfADigitalF3f60ff56f944407869c33043eb8c1400_1_Image.colorStats = {
    averageColor: Color.fromHex('#8b5f79'),
    lightestColor: Color.fromHex('#ffaaff'),
    darkestColor: Color.fromHex('#000011'),
    minmaxWhite: [Color.fromHex('#ffffff'), Color.fromHex('#000011')],
    minmaxRed: [Color.fromHex('#bb3333'), Color.fromHex('#ccffff')],
    minmaxGreen: [Color.fromHex('#779988'), Color.fromHex('#ffaaff')],
    minmaxBlue: [Color.fromHex('#2233bb'), Color.fromHex('#ffffdd')],
    mostFrequentColor: Color.fromHex('#221144'),
    mostSaturatedColor: Color.fromHex('#220022'),
    mostGroupedColor: Color.fromHex('#111133'),
    bottom: {
        averageColor: Color.fromHex('#48274f'),
        lightestColor: Color.fromHex('#ffffff'),
        darkestColor: Color.fromHex('#000011'),
        minmaxWhite: [Color.fromHex('#ffffff'), Color.fromHex('#000011')],
        minmaxRed: [Color.fromHex('#bb3333'), Color.fromHex('#ddffff')],
        minmaxGreen: [Color.fromHex('#aa9966'), Color.fromHex('#ffffff')],
        minmaxBlue: [Color.fromHex('#224499'), Color.fromHex('#ffffee')],
        mostFrequentColor: Color.fromHex('#221144'),
        mostSaturatedColor: Color.fromHex('#220022'),
        mostGroupedColor: Color.fromHex('#111133'),
    },
} satisfies IImageColorStats;
