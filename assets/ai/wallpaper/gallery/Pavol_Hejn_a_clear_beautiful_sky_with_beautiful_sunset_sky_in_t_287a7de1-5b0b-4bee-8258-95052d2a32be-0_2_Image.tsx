/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_clear_beautiful_sky_with_beautiful_sunset_sky_in_t_287a7de1-5b0b-4bee-8258-95052d2a32be-0_2.json';
import source from './Pavol_Hejn_a_clear_beautiful_sky_with_beautiful_sunset_sky_in_t_287a7de1-5b0b-4bee-8258-95052d2a32be-0_2.png';

/**
 * Image of a clear, beautiful sky with beautiful sunset sky., in the style of french countryside, pink and green, voigtlander bessa r2m, hikecore, 32k uhd, cottagepunk, biedermeier
 *
 * @see https://www.midjourney.com/app/jobs/2
 * @generated by generate-wallpapers-library
 */
export function AClearBeautifulSkyWithBeautifulSunsetSkyInT87a7de15b0b4bee825895052d2a32be02_2_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="a clear, beautiful sky with beautiful sunset sky., in the style of french countryside, pink and green, voigtlander bessa r2m, hikecore, 32k uhd, cottagepunk, biedermeier"
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

AClearBeautifulSkyWithBeautifulSunsetSkyInT87a7de15b0b4bee825895052d2a32be02_2_Image.metadata =
    metadata satisfies IWallpaperMetadata;
AClearBeautifulSkyWithBeautifulSunsetSkyInT87a7de15b0b4bee825895052d2a32be02_2_Image.colorStats = {
    averageColor: Color.fromHex('#675b5e'),
    lightestColor: Color.fromHex('#eecccc'),
    darkestColor: Color.fromHex('#000000'),
    minmaxWhite: [Color.fromHex('#eecccc'), Color.fromHex('#000000')],
    minmaxRed: [Color.fromHex('#aa3344'), Color.fromHex('#ddcccc')],
    minmaxGreen: [Color.fromHex('#557744'), Color.fromHex('#ff8899')],
    minmaxBlue: [Color.fromHex('#335577'), Color.fromHex('#eeccbb')],
    mostFrequentColor: Color.fromHex('#111111'),
    mostSaturatedColor: Color.fromHex('#001111'),
    mostGroupedColor: Color.fromHex('#ccaabb'),
    bottom: {
        averageColor: Color.fromHex('#2c3026'),
        lightestColor: Color.fromHex('#bbbbbb'),
        darkestColor: Color.fromHex('#001100'),
        minmaxWhite: [Color.fromHex('#bbbbbb'), Color.fromHex('#001100')],
        minmaxRed: [Color.fromHex('#885544'), Color.fromHex('#bbbbbb')],
        minmaxGreen: [Color.fromHex('#557744'), Color.fromHex('#221122')],
        minmaxBlue: [Color.fromHex('#665577'), Color.fromHex('#bbbbaa')],
        mostFrequentColor: Color.fromHex('#111111'),
        mostSaturatedColor: Color.fromHex('#001111'),
        mostGroupedColor: Color.fromHex('#222222'),
    },
} satisfies IImageColorStats;
