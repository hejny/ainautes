/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_wallpaper_with_a_repeating_pattern_of_simple_geome_7f75fa94-821e-46ee-974b-e1ec79ec8090-0_3.json';
import source from './Pavol_Hejn_a_wallpaper_with_a_repeating_pattern_of_simple_geome_7f75fa94-821e-46ee-974b-e1ec79ec8090-0_3.png';

/**
 * Image of A wallpaper with a repeating pattern of simple geometric shapes, arranged in a grid-like fractal structure.
 *
 * @see https://www.midjourney.com/app/jobs/3
 * @generated by generate-wallpapers-library
 */
export function AWallpaperWithARepeatingPatternOfSimpleGeome7f75fa94821e46ee974bE1ec79ec80900_3_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A wallpaper with a repeating pattern of simple geometric shapes, arranged in a grid-like fractal structure."
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

AWallpaperWithARepeatingPatternOfSimpleGeome7f75fa94821e46ee974bE1ec79ec80900_3_Image.metadata =
    metadata satisfies IWallpaperMetadata;
AWallpaperWithARepeatingPatternOfSimpleGeome7f75fa94821e46ee974bE1ec79ec80900_3_Image.colorStats = {
    averageColor: Color.fromHex('#7d7356'),
    lightestColor: Color.fromHex('#eeeecc'),
    darkestColor: Color.fromHex('#221100'),
    minmaxWhite: [Color.fromHex('#eeeecc'), Color.fromHex('#221100')],
    minmaxRed: [Color.fromHex('#cc4422'), Color.fromHex('#eeeecc')],
    minmaxGreen: [Color.fromHex('#55aa77'), Color.fromHex('#ffddbb')],
    minmaxBlue: [Color.fromHex('#225566'), Color.fromHex('#ffeebb')],
    mostFrequentColor: Color.fromHex('#222233'),
    mostSaturatedColor: Color.fromHex('#331100'),
    mostGroupedColor: Color.fromHex('#332222'),
    bottom: {
        averageColor: Color.fromHex('#766d53'),
        lightestColor: Color.fromHex('#eeeecc'),
        darkestColor: Color.fromHex('#221100'),
        minmaxWhite: [Color.fromHex('#eeeecc'), Color.fromHex('#221100')],
        minmaxRed: [Color.fromHex('#cc4422'), Color.fromHex('#eeeecc')],
        minmaxGreen: [Color.fromHex('#55aa77'), Color.fromHex('#ffddbb')],
        minmaxBlue: [Color.fromHex('#225566'), Color.fromHex('#ffdd99')],
        mostFrequentColor: Color.fromHex('#222233'),
        mostSaturatedColor: Color.fromHex('#331100'),
        mostGroupedColor: Color.fromHex('#222222'),
    },
} satisfies IImageColorStats;
