/**
 * üè≠ GENERATED WITH üñºÔ∏è Generate wallpapers library
 * ‚ö†Ô∏è Warning: Do not edit by hand, all changes will be lost on next execution!
 *    If you want to edit this file:
 *      - Change @generated to @not-generated
 *      - And remove this warning
 *    Then the file will not be re-generated automatically
 */

import Image from 'next/image';
import { Color } from '../../../../src/utils/color/Color';
import { IImageColorStats } from '../../../../src/utils/image/utils/IImageColorStats';
import { IWallpaperMetadata, IWallpaperComponentProps } from '../IWallpaperComponent';
import metadata from './Pavol_Hejn_a_minimalist_wallpaper_with_a_single_line_drawing_of_1d33c07e-a553-4c56-b7b8-c3321364d87b-0_3.json';
import source from './Pavol_Hejn_a_minimalist_wallpaper_with_a_single_line_drawing_of_1d33c07e-a553-4c56-b7b8-c3321364d87b-0_3.png';

/**
 * Image of A minimalist wallpaper with a single line drawing of a cyborg, in a striking color such as bright red or blue.
 *
 * @see https://www.midjourney.com/app/jobs/3
 * @generated by generate-wallpapers-library
 */
export function AMinimalistWallpaperWithASingleLineDrawingOf1d33c07eA5534c56B7b8C3321364d87b0_3_Image(
    props: IWallpaperComponentProps,
) {
    const { width, quality } = props;

    return (
        <Image
            alt="A minimalist wallpaper with a single line drawing of a cyborg, in a striking color such as bright red or blue."
            src={source}
            draggable="false"
            placeholder="blur"
            height={Math.round((width / 1920) * 1080)}
            style={{ objectFit: 'cover', width: '100%', height: '100%' }}
            {...{ width, quality }}
        />
    );
}

AMinimalistWallpaperWithASingleLineDrawingOf1d33c07eA5534c56B7b8C3321364d87b0_3_Image.metadata =
    metadata satisfies IWallpaperMetadata;
AMinimalistWallpaperWithASingleLineDrawingOf1d33c07eA5534c56B7b8C3321364d87b0_3_Image.colorStats = {
    averageColor: Color.fromHex('#dd736a'),
    lightestColor: Color.fromHex('#ddddff'),
    darkestColor: Color.fromHex('#331111'),
    minmaxWhite: [Color.fromHex('#ffeeee'), Color.fromHex('#330022')],
    minmaxRed: [Color.fromHex('#ff1111'), Color.fromHex('#cceeee')],
    minmaxGreen: [Color.fromHex('#779999'), Color.fromHex('#ee0022')],
    minmaxBlue: [Color.fromHex('#113399'), Color.fromHex('#ffeecc')],
    mostFrequentColor: Color.fromHex('#ee4422'),
    mostSaturatedColor: Color.fromHex('#ee2200'),
    mostGroupedColor: Color.fromHex('#ff3322'),
    bottom: {
        averageColor: Color.fromHex('#d98780'),
        lightestColor: Color.fromHex('#ddddff'),
        darkestColor: Color.fromHex('#550011'),
        minmaxWhite: [Color.fromHex('#ffeeee'), Color.fromHex('#550011')],
        minmaxRed: [Color.fromHex('#ff1111'), Color.fromHex('#ddeeee')],
        minmaxGreen: [Color.fromHex('#779999'), Color.fromHex('#ee0022')],
        minmaxBlue: [Color.fromHex('#332288'), Color.fromHex('#ffeecc')],
        mostFrequentColor: Color.fromHex('#ee4422'),
        mostSaturatedColor: Color.fromHex('#ee2200'),
        mostGroupedColor: Color.fromHex('#bbcccc'),
    },
} satisfies IImageColorStats;
