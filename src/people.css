.Person {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: min-content min-content min-content;
    align-items: stretch;
    justify-content: stretch;
    text-align: center;
}

.Person .personImageContainer {
    z-index: 1;
    order: 1;
    grid-column: 1 / span 1;
    grid-row: 1 / span 1;
    aspect-ratio: 1/1;
    margin: 30px 30px 0;
    border-radius: 50px;
    box-shadow: -25px 25px 0 #00000077;
}

/* TODO: Make here same paralax effect */

.Person .personImageContainer img {
    width: 100%;
    height: 100%;
    border-radius: 50px;
    background-image: radial-gradient(circle at center, var(--palette-4) 0, #000 120%);
    object-fit: cover;
    object-position: 50% 5%;
    image-rendering: crisp-edges /* <- !!! Fix aliasing */;
}

.Person .overlay {
    z-index: 2;
    order: 2;
    grid-column: 1 / span 1;
    grid-row: 1 / span 1;
    background-color: rgba(0, 0, 0, 0.37);
    transition: all 0.2s ease-in-out;
}

.Person .title {
    z-index: 1;
    order: 1;
    grid-column: 1 / span 1;
    font-size: 30px;
    margin-top: -7px;
}

.Person .description {
    z-index: 3;
    order: 3;
    grid-column: 1 / span 1;
    text-align: left;
    padding-left: 25px;
    padding-right: 25px;
    font-size: 15px;
    transition: color 0.3s ease-in-out;
}

.Person .description p:not(:last-child) {
    margin-bottom: 10px;
}

.Person:hover .description {
    color: var(--highlighted-text-color);
}

.Person .description a:after,
.Person .description a:before {
    content: ' ';
}

.People {
    display: flex;
    flex-flow: row wrap;
    row-gap: 40px;
    margin-bottom: 30px;
}

.People.row-with-2-items > * {
    width: 50%;
}

.People.row-with-3-items > * {
    width: 33.333%;
}

.People > a {
    color: inherit;
    text-decoration: inherit;
}

@media only screen and (max-width: 650px) {
    .People.row-with-2-items > *,
    .People.row-with-3-items > * {
        width: 100%;
    }
}
